instantiate an empty dictionary
for each number in list of numbers:
    result = subtract number from target number
    look for result in the dictionary (instant lookup)
    if found:
        return index of number and index of dictionary lookup result
    else:
        add number to dictionary as key with value being the index

def twoSum(self, nums: List[int], target: int) -> List[int]:
        dictionary = {}
        answer = []
        
        for i in range(len(nums)):
            secondNumber = target-nums[i]
            if(secondNumber in dictionary.keys()):
                secondIndex = nums.index(secondNumber)
                if(i != secondIndex):
                    return sorted([i, secondIndex])
                
            dictionary.update({nums[i]: i})
            
def twoSum(self, nums: [2,7,11,15], target: 9) -> [2,7,11,15]:
        dictionary = {}
        answer = []
        
        for i in range(len(nums)):
            secondNumber = target-nums[i]
            if(secondNumber in dictionary.keys()):
                secondIndex = nums.index(secondNumber)
                if(i != secondIndex):
                    return sorted([i, secondIndex])
                
            dictionary.update({nums[i]: i})
